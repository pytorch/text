{% set build_variant = environ.get('CONDA_BUILD_VARIANT', 'cpu') %}
package:
  name: torchtext
  version: "{{ environ.get('BUILD_VERSION') }}"

source:
  path: "{{ environ.get('SOURCE_ROOT_DIR') }}"

requirements:
  build:
    - {{ compiler('c') }} # [win]
    - {{ compiler('cxx') }} # [win]
    - cmake

  host:
    - python
    - setuptools
    {{ environ.get('CONDA_PYTORCH_BUILD_CONSTRAINT') }}

  run:
    - python
    - requests
    - tqdm
    - pytorch-mutex 1.0 {{ build_variant }}  # [not osx ]
    {{ environ.get('CONDA_PYTORCH_CONSTRAINT') }}

  {% if build_variant == 'cpu' %}
  run_constrained:
    - cpuonly
  {% elif not osx %}
  run_constrained:
     - cpuonly <0
  {% endif %}

build:
  string: py{{py}}
  script_env:
    - BUILD_VERSION

test:
  imports:
    - torchtext
    - torchtext.datasets
    - torchtext.data

  source_files:
    - test

  requires:
    - pytest

about:
  home: https://github.com/pytorch/text
  license: BSD
  license_file: LICENSE
  summary: 'Data loaders and abstractions for text and NLP'
