version: 2.1

# How to test the Linux jobs:
#   - Install CircleCI local CLI: https://circleci.com/docs/2.0/local-cli/
#   - circleci config process .circleci/config.yml > gen.yml && circleci local execute -c gen.yml --job binary_linux_wheel_py3.8
#     - Replace binary_linux_wheel_py3.8 with the name of the job you want to test.
#       Job names are 'name:' key.

orbs:
  win: circleci/windows@2.0.0

executors:
  windows-cpu:
    machine:
      resource_class: windows.xlarge
      image: windows-server-2019-vs2019:stable
      shell: bash.exe

commands:
  designate_upload_channel:
    description: "inserts the correct upload channel into ${BASH_ENV}"
    steps:
      - run:
          name: adding UPLOAD_CHANNEL to BASH_ENV
          command: |
            our_upload_channel=nightly
            # On tags upload to test instead
            if [[ -n "${CIRCLE_TAG}" ]]; then
              our_upload_channel=test
            fi
            echo "export UPLOAD_CHANNEL=${our_upload_channel}" >> ${BASH_ENV}

binary_common: &binary_common
  parameters:
    # Edit these defaults to do a release
    build_version:
      description: "version number of release binary; by default, build a nightly"
      type: string
      default: ""
    pytorch_version:
      description: "PyTorch version to build against; by default, use a nightly"
      type: string
      default: ""
    # Don't edit these
    python_version:
      description: "Python version to build against (e.g., 3.8)"
      type: string
  environment:
    PYTHON_VERSION: << parameters.python_version >>
    BUILD_VERSION: << parameters.build_version >>
    PYTORCH_VERSION: << parameters.pytorch_version >>
    CU_VERSION: cpu

smoke_test_common: &smoke_test_common
  <<: *binary_common
  docker:
    - image: pytorch/torchtext_smoke_base:latest

jobs:
  circleci_consistency:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          command: |
            pip install --user --progress-bar off jinja2 pyyaml
            python .circleci/regenerate.py
            git diff --exit-code || (echo ".circleci/config.yml not in sync with config.yml.in! Run .circleci/regenerate.py to update config"; exit 1)

  binary_linux_wheel:
    <<: *binary_common
    docker:
      - image: "pytorch/manylinux-cuda100"
    resource_class: 2xlarge+
    steps:
      - checkout
      - run: packaging/build_wheel.sh
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: dist
          paths:
            - "*"

  binary_linux_conda:
    <<: *binary_common
    docker:
      - image: "pytorch/conda-cuda"
    resource_class: 2xlarge+
    steps:
      - checkout
      - run: packaging/build_conda.sh
      - store_artifacts:
          path: /opt/conda/conda-bld/linux-64
      - persist_to_workspace:
          root: /opt/conda
          paths:
            - "conda-bld/*"

  binary_windows_wheel:
    <<: *binary_common
    executor:
      name: windows-cpu
    steps:
      - checkout
      - run:
          name: build
          command: |
            eval "$('/C/tools/miniconda3/Scripts/conda.exe' 'shell.bash' 'hook')"
            conda activate base
            bash packaging/build_wheel.sh
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: dist
          paths:
            - "*"

  binary_windows_conda:
    <<: *binary_common
    executor:
      name: windows-cpu
    steps:
      - checkout
      - run:
          name: build
          command: |
            eval "$('/C/tools/miniconda3/Scripts/conda.exe' 'shell.bash' 'hook')"
            conda activate base
            conda install -yq conda-build "conda-package-handling!=1.5.0"
            bash packaging/build_conda.sh
            rm /C/tools/miniconda3/conda-bld/win-64/vs2019*.tar.bz2
      - store_artifacts:
          path: C:/tools/miniconda3/conda-bld/win-64
      - persist_to_workspace:
          root: C:/tools/miniconda3
          paths:
            - "conda-bld/*"

  binary_macos_wheel:
    <<: *binary_common
    macos:
      xcode: "9.0"
    steps:
      - checkout
      - run:
          # Installing cmake with `brew install cmake` takes 30 mins, so we use binary distribution.
          command: |
            curl -o cmake.tar.gz -L https://github.com/Kitware/CMake/releases/download/v3.17.2/cmake-3.17.2-Darwin-x86_64.tar.gz
            tar -xzf cmake.tar.gz
            cp cmake-3.17.2-Darwin-x86_64/CMake.app/Contents/bin/* /usr/local/bin/
            cp -r cmake-3.17.2-Darwin-x86_64/CMake.app/Contents/share/* /usr/local/share/
            export PATH="${PATH}:/usr/local/bin"
            curl -o conda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
            sh conda.sh -b
            source $HOME/miniconda3/bin/activate
            packaging/build_wheel.sh
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: dist
          paths:
            - "*"

  binary_macos_conda:
    <<: *binary_common
    macos:
      xcode: "9.0"
    steps:
      - checkout
      - run:
          command: |
            curl -o conda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
            sh conda.sh -b
            source $HOME/miniconda3/bin/activate
            conda install -yq conda-build
            packaging/build_conda.sh
      - store_artifacts:
          path: /Users/distiller/miniconda3/conda-bld/osx-64
      - persist_to_workspace:
          root: /Users/distiller/miniconda3
          paths:
            - "conda-bld/*"

  # Requires org-member context
  binary_conda_upload:
    docker:
      - image: continuumio/miniconda
    steps:
      - attach_workspace:
          at: ~/workspace
      - designate_upload_channel
      - run:
          command: |
            # Prevent credential from leaking
            conda install -yq anaconda-client
            set -x
            anaconda -t "${CONDA_PYTORCHBOT_TOKEN}" upload ~/workspace/conda-bld/*/*.tar.bz2 -u pytorch-nightly --label main --no-progress --force

  # Requires org-member context
  binary_wheel_upload:
    docker:
      - image: circleci/python:3.8
    steps:
      - attach_workspace:
          at: ~/workspace
      - checkout
      - designate_upload_channel
      - run:
          command: |
            pip install --user awscli
            export PATH="$HOME/.local/bin:$PATH"
            # Prevent credential from leaking
            set +x
            export AWS_ACCESS_KEY_ID="${PYTORCH_BINARY_AWS_ACCESS_KEY_ID}"
            export AWS_SECRET_ACCESS_KEY="${PYTORCH_BINARY_AWS_SECRET_ACCESS_KEY}"
            set -x
            for pkg in ~/workspace/*.whl; do
              aws s3 cp "$pkg" "s3://pytorch/whl/nightly/" --acl public-read
            done

  smoke_test_linux_conda:
    <<: *smoke_test_common
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: install binaries
          command: |
            set -x
            source /usr/local/etc/profile.d/conda.sh && conda activate python${PYTHON_VERSION}
            conda install -v -y -c pytorch-nightly pytorch
            conda install -v -y -c file://$HOME/workspace/conda-bld torchtext
      - run:
          name: smoke test
          command: |
            source /usr/local/etc/profile.d/conda.sh && conda activate python${PYTHON_VERSION}
            python -c "import torchtext"

  smoke_test_linux_pip:
    <<: *smoke_test_common
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: install binaries
          command: |
            set -x
            source /usr/local/etc/profile.d/conda.sh && conda activate python${PYTHON_VERSION}
            pip install $(ls ~/workspace/torchtext*.whl) --pre -f https://download.pytorch.org/whl/nightly/torch_nightly.html
      - run:
          name: smoke test
          command: |
            source /usr/local/etc/profile.d/conda.sh && conda activate python${PYTHON_VERSION}
            python -c "import torchtext"

  smoke_test_docker_image_build:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    environment:
      image_name: torchtext/smoke_test
    steps:
      - checkout
      - run:
          name: Build and push Docker image
          no_output_timeout: "1h"
          command: |
            set +x
            echo "${DOCKER_HUB_TOKEN}" | docker login --username "${DOCKER_HUB_USERNAME}" --password-stdin
            set -x
            cd .circleci/smoke_test/docker && docker build . -t ${image_name}:${CIRCLE_WORKFLOW_ID}
            docker tag ${image_name}:${CIRCLE_WORKFLOW_ID} ${image_name}:latest
            docker push ${image_name}:${CIRCLE_WORKFLOW_ID}
            docker push ${image_name}:latest

  smoke_test_windows_conda:
    <<: *binary_common
    executor:
      name: windows-cpu
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: install binaries
          command: |
            set -x
            eval "$('/C/tools/miniconda3/Scripts/conda.exe' 'shell.bash' 'hook')"
            conda env remove -n python${PYTHON_VERSION} || true
            conda create -yn python${PYTHON_VERSION} python=${PYTHON_VERSION}
            conda activate python${PYTHON_VERSION}
            conda install -v -y -c pytorch-nightly pytorch
            conda install -v -y -c ~/workspace/conda-bld torchtext
      - run:
          name: smoke test
          command: |
            eval "$('/C/tools/miniconda3/Scripts/conda.exe' 'shell.bash' 'hook')"
            conda activate python${PYTHON_VERSION}
            python -c "import torchtext"

  smoke_test_windows_pip:
    <<: *binary_common
    executor:
      name: windows-cpu
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: install binaries
          command: |
            set -x
            eval "$('/C/tools/miniconda3/Scripts/conda.exe' 'shell.bash' 'hook')"
            conda env remove -n python${PYTHON_VERSION} || true
            conda create -yn python${PYTHON_VERSION} python=${PYTHON_VERSION}
            conda activate python${PYTHON_VERSION}
            pip install $(ls ~/workspace/torchtext*.whl) --pre -f https://download.pytorch.org/whl/nightly/torch_nightly.html
      - run:
          name: smoke test
          command: |
            eval "$('/C/tools/miniconda3/Scripts/conda.exe' 'shell.bash' 'hook')"
            conda activate python${PYTHON_VERSION}
            python -c "import torchtext"

  unittest_linux:
    <<: *binary_common
    docker:
      - image: "pytorch/manylinux-cuda100"
    resource_class: 2xlarge+
    steps:
      - checkout
      - run:
          name: Generate cache key
          # This will refresh cache on Sundays, nightly build should generate new cache.
          command: echo "$(date +"%Y-%U")" > .circleci-weekly
      - restore_cache:

          keys:
            - env-v1-linux-{{ arch }}-py<< parameters.python_version >>-{{ checksum ".circleci/unittest/linux/scripts/environment.yml" }}-{{ checksum ".circleci-weekly" }}

      - run:
          name: Setup
          command: .circleci/unittest/linux/scripts/setup_env.sh
      - save_cache:

          key: env-v1-linux-{{ arch }}-py<< parameters.python_version >>-{{ checksum ".circleci/unittest/linux/scripts/environment.yml" }}-{{ checksum ".circleci-weekly" }}

          paths:
            - conda
            - env
      - run:
          name: Install torchtext
          command: .circleci/unittest/linux/scripts/install.sh
      - restore_cache:
          keys:

            - data-linux-v1-{{ checksum ".circleci-weekly" }}

      - run:
          name: Run tests
          # Downloading embedding vector takes long time.
          no_output_timeout: 30m
          command: .circleci/unittest/linux/scripts/run_test.sh
      - save_cache:

          key: data-linux-v1-{{ checksum ".circleci-weekly" }}

          paths:
            - .vector_cache
            - .data
      - run:
          name: Post process
          command: .circleci/unittest/linux/scripts/post_process.sh
      - store_test_results:
          path: test-results

  unittest_windows:
    <<: *binary_common
    executor:
      name: windows-cpu
    steps:
      - checkout
      - run:
          name: Generate cache key
          # This will refresh cache on Sundays, nightly build should generate new cache.
          command: echo "$(date +"%Y-%U")" > .circleci-weekly
      - restore_cache:

          keys:
            - env-v1-windows-{{ arch }}-py<< parameters.python_version >>-{{ checksum ".circleci/unittest/windows/scripts/environment.yml" }}-{{ checksum ".circleci-weekly" }}

      - run:
          name: Setup
          command: .circleci/unittest/windows/scripts/setup_env.sh
      - save_cache:

          key: env-v1-windows-{{ arch }}-py<< parameters.python_version >>-{{ checksum ".circleci/unittest/windows/scripts/environment.yml" }}-{{ checksum ".circleci-weekly" }}

          paths:
            - conda
            - env
      - run:
          name: Install torchtext
          command: .circleci/unittest/windows/scripts/install.sh
      - restore_cache:
          keys:

            - data-windows-v1-{{ checksum ".circleci-weekly" }}

      - run:
          name: Run tests
          # Downloading embedding vector takes long time.
          no_output_timeout: 30m
          command: .circleci/unittest/windows/scripts/run_test.sh
      - save_cache:

          key: data-windows-v1-{{ checksum ".circleci-weekly" }}

          paths:
            - .vector_cache
            - .data
      - run:
          name: Post process
          command: .circleci/unittest/windows/scripts/post_process.sh
      - store_test_results:
          path: test-results

  stylecheck:
    <<: *binary_common
    docker:
      - image: "pytorch/manylinux-cuda100"
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Generate cache key
          # This will refresh cache on Sundays, nightly build should generate new cache.
          command: echo "$(date +"%Y-%U")" > .circleci-weekly
      - restore_cache:

          keys:
            - env-v1-linux-{{ arch }}-py<< parameters.python_version >>-{{ checksum ".circleci/unittest/linux/scripts/environment.yml" }}-{{ checksum ".circleci-weekly" }}

      - run:
          name: Setup
          command: .circleci/unittest/linux/scripts/setup_env.sh
      - save_cache:

          key: env-v1-linux-{{ arch }}-py<< parameters.python_version >>-{{ checksum ".circleci/unittest/linux/scripts/environment.yml" }}-{{ checksum ".circleci-weekly" }}

          paths:
            - conda
            - env
      - run:
          name: Run style check
          command: .circleci/unittest/linux/scripts/run_style_checks.sh

workflows:
  build:
    jobs:
      - circleci_consistency
      - binary_linux_wheel:
          name: binary_linux_wheel_py3.6
          python_version: '3.6'
      - binary_linux_wheel:
          name: binary_linux_wheel_py3.7
          python_version: '3.7'
      - binary_linux_wheel:
          name: binary_linux_wheel_py3.8
          python_version: '3.8'
      - binary_macos_wheel:
          name: binary_macos_wheel_py3.6
          python_version: '3.6'
      - binary_macos_wheel:
          name: binary_macos_wheel_py3.7
          python_version: '3.7'
      - binary_macos_wheel:
          name: binary_macos_wheel_py3.8
          python_version: '3.8'
      - binary_windows_wheel:
          name: binary_windows_wheel_py3.6
          python_version: '3.6'
      - binary_windows_wheel:
          name: binary_windows_wheel_py3.7
          python_version: '3.7'
      - binary_windows_wheel:
          name: binary_windows_wheel_py3.8
          python_version: '3.8'
      - binary_linux_conda:
          name: binary_linux_conda_py3.6
          python_version: '3.6'
      - binary_linux_conda:
          name: binary_linux_conda_py3.7
          python_version: '3.7'
      - binary_linux_conda:
          name: binary_linux_conda_py3.8
          python_version: '3.8'
      - binary_macos_conda:
          name: binary_macos_conda_py3.6
          python_version: '3.6'
      - binary_macos_conda:
          name: binary_macos_conda_py3.7
          python_version: '3.7'
      - binary_macos_conda:
          name: binary_macos_conda_py3.8
          python_version: '3.8'
      - binary_windows_conda:
          name: binary_windows_conda_py3.6
          python_version: '3.6'
      - binary_windows_conda:
          name: binary_windows_conda_py3.7
          python_version: '3.7'
      - binary_windows_conda:
          name: binary_windows_conda_py3.8
          python_version: '3.8'
  unittest:
    jobs:
      - unittest_linux:
          name: unittest_linux_py3.6
          python_version: '3.6'
      - stylecheck:
          name: stylecheck_py3.6
          python_version: '3.6'
      - unittest_linux:
          name: unittest_linux_py3.7
          python_version: '3.7'
      - unittest_linux:
          name: unittest_linux_py3.8
          python_version: '3.8'
      - unittest_windows:
          name: unittest_windows_py3.6
          python_version: '3.6'
      - unittest_windows:
          name: unittest_windows_py3.7
          python_version: '3.7'
      - unittest_windows:
          name: unittest_windows_py3.8
          python_version: '3.8'
  nightly:
    jobs:
      - circleci_consistency:
          filters:
            branches:
              only: nightly
      - binary_linux_wheel:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_wheel_py3.6
          python_version: '3.6'
      - binary_wheel_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_wheel_py3.6_upload
          requires:
          - nightly_binary_linux_wheel_py3.6
      - smoke_test_linux_pip:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_wheel_py3.6_smoke_test_pip
          python_version: '3.6'
          requires:
          - nightly_binary_linux_wheel_py3.6_upload
      - binary_linux_wheel:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_wheel_py3.7
          python_version: '3.7'
      - binary_wheel_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_wheel_py3.7_upload
          requires:
          - nightly_binary_linux_wheel_py3.7
      - smoke_test_linux_pip:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_wheel_py3.7_smoke_test_pip
          python_version: '3.7'
          requires:
          - nightly_binary_linux_wheel_py3.7_upload
      - binary_linux_wheel:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_wheel_py3.8
          python_version: '3.8'
      - binary_wheel_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_wheel_py3.8_upload
          requires:
          - nightly_binary_linux_wheel_py3.8
      - smoke_test_linux_pip:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_wheel_py3.8_smoke_test_pip
          python_version: '3.8'
          requires:
          - nightly_binary_linux_wheel_py3.8_upload
      - binary_macos_wheel:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_wheel_py3.6
          python_version: '3.6'
      - binary_wheel_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_wheel_py3.6_upload
          requires:
          - nightly_binary_macos_wheel_py3.6
      - binary_macos_wheel:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_wheel_py3.7
          python_version: '3.7'
      - binary_wheel_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_wheel_py3.7_upload
          requires:
          - nightly_binary_macos_wheel_py3.7
      - binary_macos_wheel:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_wheel_py3.8
          python_version: '3.8'
      - binary_wheel_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_wheel_py3.8_upload
          requires:
          - nightly_binary_macos_wheel_py3.8
      - binary_windows_wheel:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_wheel_py3.6
          python_version: '3.6'
      - binary_wheel_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_wheel_py3.6_upload
          requires:
          - nightly_binary_windows_wheel_py3.6
      - smoke_test_windows_pip:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_wheel_py3.6_smoke_test_pip
          python_version: '3.6'
          requires:
          - nightly_binary_windows_wheel_py3.6_upload
      - binary_windows_wheel:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_wheel_py3.7
          python_version: '3.7'
      - binary_wheel_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_wheel_py3.7_upload
          requires:
          - nightly_binary_windows_wheel_py3.7
      - smoke_test_windows_pip:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_wheel_py3.7_smoke_test_pip
          python_version: '3.7'
          requires:
          - nightly_binary_windows_wheel_py3.7_upload
      - binary_windows_wheel:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_wheel_py3.8
          python_version: '3.8'
      - binary_wheel_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_wheel_py3.8_upload
          requires:
          - nightly_binary_windows_wheel_py3.8
      - smoke_test_windows_pip:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_wheel_py3.8_smoke_test_pip
          python_version: '3.8'
          requires:
          - nightly_binary_windows_wheel_py3.8_upload
      - binary_linux_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_conda_py3.6
          python_version: '3.6'
      - binary_conda_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_conda_py3.6_upload
          requires:
          - nightly_binary_linux_conda_py3.6
      - smoke_test_linux_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_conda_py3.6_smoke_test_conda
          python_version: '3.6'
          requires:
          - nightly_binary_linux_conda_py3.6_upload
      - binary_linux_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_conda_py3.7
          python_version: '3.7'
      - binary_conda_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_conda_py3.7_upload
          requires:
          - nightly_binary_linux_conda_py3.7
      - smoke_test_linux_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_conda_py3.7_smoke_test_conda
          python_version: '3.7'
          requires:
          - nightly_binary_linux_conda_py3.7_upload
      - binary_linux_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_conda_py3.8
          python_version: '3.8'
      - binary_conda_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_conda_py3.8_upload
          requires:
          - nightly_binary_linux_conda_py3.8
      - smoke_test_linux_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_linux_conda_py3.8_smoke_test_conda
          python_version: '3.8'
          requires:
          - nightly_binary_linux_conda_py3.8_upload
      - binary_macos_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_conda_py3.6
          python_version: '3.6'
      - binary_conda_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_conda_py3.6_upload
          requires:
          - nightly_binary_macos_conda_py3.6
      - binary_macos_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_conda_py3.7
          python_version: '3.7'
      - binary_conda_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_conda_py3.7_upload
          requires:
          - nightly_binary_macos_conda_py3.7
      - binary_macos_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_conda_py3.8
          python_version: '3.8'
      - binary_conda_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_macos_conda_py3.8_upload
          requires:
          - nightly_binary_macos_conda_py3.8
      - binary_windows_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_conda_py3.6
          python_version: '3.6'
      - binary_conda_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_conda_py3.6_upload
          requires:
          - nightly_binary_windows_conda_py3.6
      - smoke_test_windows_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_conda_py3.6_smoke_test_conda
          python_version: '3.6'
          requires:
          - nightly_binary_windows_conda_py3.6_upload
      - binary_windows_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_conda_py3.7
          python_version: '3.7'
      - binary_conda_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_conda_py3.7_upload
          requires:
          - nightly_binary_windows_conda_py3.7
      - smoke_test_windows_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_conda_py3.7_smoke_test_conda
          python_version: '3.7'
          requires:
          - nightly_binary_windows_conda_py3.7_upload
      - binary_windows_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_conda_py3.8
          python_version: '3.8'
      - binary_conda_upload:
          context: org-member
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_conda_py3.8_upload
          requires:
          - nightly_binary_windows_conda_py3.8
      - smoke_test_windows_conda:
          filters:
            branches:
              only: nightly
            tags:
              only: /v[0-9]+(\.[0-9]+)*-rc[0-9]+/
          name: nightly_binary_windows_conda_py3.8_smoke_test_conda
          python_version: '3.8'
          requires:
          - nightly_binary_windows_conda_py3.8_upload
  docker_build:
    triggers:
      - schedule:
          cron: "0 10 * * 0"
          filters:
            branches:
              only:
                - master
    jobs:
      - smoke_test_docker_image_build:
          context: org-member